1.manage backend:   
    1.1.database table migration:
            _users(exists by default): 
                    id(PK),
                    name,
                    email,
                    password.
            _profiles: 
                        id(PK),
                        user_id(FK),
                        image(nullable),
                        description(nullable),
                        status(boolean)

            _students: 
                        id(PK),
                        student_name,
                        gender,
                        dob,
                        phone(nullable).
    1.2.controllers: 
            _AuthController: index,show,store,update,destroy,login,logout,register
            _StudentController: index,show,store,update,destroy
            
    1.3.models:
            _Profile:   (user_id,image,description,status)
                        belongsToUser.
            _User: (everything by default)
                    HasOne Profile.
            _Student: (student_name,gender,dob,phone)
    1.4.setting route APIs:
            _Routes for Authentication controller: login,register,store
            _Routes for Students controller: ISSUD.

And lastly, don't forget to add validations in controllers too.

2.Frontend management:
    2.1.Set up React.
    2.2.Install required Packages
        _axios: For API requests.
        _React router-dom: for handling routes.
        _Ant Design: For UI components(optional)
        _Tailwind: CSS libraries class(optional)
        _Bootstrap: same as tailwind.
    2.3.Project Structure
        -Components/
            -Header.jsx           
            -DashboardLayout.jsx(layout for main)
            -AuthLayout.jsx(layout for -login,register pages)
        -Pages/
            -Login.jsx
            -Register.jsx
            -StudentForm.jsx
        -Util/
            -api.js
            -imag.js
        -App.jsx
        -index.js
    2.4.Setting up Route
    2.5.Set up Axios API service

 3.hosting (vercel + railway)
    3.1.Backend on Railway (Laravel)
            -Sign Up at Railway.
            -Create New Project → Choose GitHub → Connect your Laravel repo.
            -Set Environment Variables (Laravel’s .env):
                APP_URL=https://your-backend.up.railway.app
                DB_CONNECTION=mysql
                DB_HOST=your-database-host
                DB_DATABASE=your_database
                DB_USERNAME=your_username
                DB_PASSWORD=your_password

    3.2. Frontend on Vercel (React)
            -Sign Up at Vercel.
            -Create New Project → Choose your React GitHub repo.
            -Set Environment Variable for API in Vercel:
                 REACT_APP_API_URL=https://your-backend.up.railway.app/api
       
    3.3. Test Your App
        Open Vercel’s URL in your browser.
        Make sure the React app talks to your Laravel API correctly.

    
    